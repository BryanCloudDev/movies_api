{
	"info": {
		"_postman_id": "be8578f5-f93f-4886-a2b1-10065b50e71b",
		"name": "Movies API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15984313"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{users}}/1",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"example5@example.com\",\n    \"password\": \"secretpassword\",\n    \"birthDate\": \"2023-06-29T08:28:05.503Z\",\n    \"profilePhoto\": \"https://avatars.githubusercontent.com/u/2693364\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{users}}",
							"host": [
								"{{base-url}}{{users}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit user by id",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"exampled@example.com\",\n    \"birthDate\": \"1999-06-29T08:28:05.503Z\",\n    \"profilePhoto\": \"https://avatars.githubusercontent.com/u/2693364\",\n    \"roleId\": 1,\n    \"status\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{users}}/1",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{users}}/1",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{users}}",
							"host": [
								"{{base-url}}{{users}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"select\":[\"firstName\"],\"order\":{\"createdOn\":\"ASC\"},\"offset\":0}",
									"description": "We can order by any of the fields in the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"select\":[\"firstName\"],\"offset\":0}",
									"description": "We can select one field only, multiple or all, from the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"offset\":0}",
									"description": "We can query the criteria to search for, from the databse",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\":2,\"offset\":0}",
									"description": "We may need to query just to get a pagination, offset and limit are mandatory",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"example@example.com\",\n    \"password\": \"secretpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/login",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{users}}/profile",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create admin user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsImVtYWlsIjoiZXhhbXBsZUBleGFtcGxlLmNvbSIsInJvbGUiOjEsImlhdCI6MTY4ODI4NTIxMywiZXhwIjoxNjg4Mjg4ODEzfQ.Y3jj2JCb11WoFmWy5owZeY9pqUm11U5abrOgUCiDnZs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"exampleadmin@example.com\",\n    \"password\": \"secretpassword\",\n    \"birthDate\": \"2023-06-29T08:28:05.503Z\",\n    \"roleId\": 1,\n    \"profilePhoto\": \"https://avatars.githubusercontent.com/u/2693364\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{users}}/admin",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movies liked by user id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{users}}/18{{movies}}?filter={\"limit\": 2, \"offset\": 0}",
							"host": [
								"{{base-url}}{{users}}"
							],
							"path": [
								"18{{movies}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"limit\": 2, \"offset\": 0, \"select\":[\"id\",\"name\"],\"order\":{\"name\":\"DESC\"}}",
									"description": "In order to select certain fields with \"select\", the \"id\" propertie is mandatory",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\": 2, \"offset\": 0, \"select\":[\"id\",\"name\"]}",
									"description": "We can do a select for specifi fields only",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\": 2, \"offset\": 0}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movie",
			"item": [
				{
					"name": "Create movie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"countryOrigin\": \"United States\",\n  \"description\": \"The Avengers is a 2012 American superhero film based on the Marvel Comics superhero team of the same name.\",\n  \"director\": \"Joss Whedon\",\n  \"duration\": 143,\n  \"genre\": \"Action, Adventure, Sci-Fi\",\n  \"language\": \"English\",\n  \"name\": \"The Avengers\",\n  \"poster\": \"https://www.example.com/the-avengers-poster.jpg\",\n  \"rating\": 8.0,\n  \"releaseDate\": \"2012-05-04T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{movies}}",
							"host": [
								"{{base-url}}{{movies}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit movie by id",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"countryOrigin\": \"United States\",\n  \"description\": \"The Avengers is a 2012 American superhero film based on the Marvel Comics superhero team of the same name.\",\n  \"director\": \"Joss Whedon\",\n  \"duration\": 143,\n  \"genre\": \"Action, Adventure, Sci-Fi\",\n  \"language\": \"English\",\n  \"name\": \"The Avengers\",\n  \"poster\": \"https://www.example.com/the-avengers-poster.jpg\",\n  \"rating\": 8.0,\n  \"releaseDate\": \"2012-05-04T00:00:00Z\",\n  \"status\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{movies}}/1",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{movies}}/1",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{movies}}?filter={\"limit\":2,\"offset\":0}",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"select\":[\"name\"],\"order\":{\"createdOn\":\"ASC\"},\"offset\":0}",
									"description": "We can order by any of the fields in the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"select\":[\"name\"],\"offset\":0}",
									"description": "We can select one field only, multiple or all, from the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"where\":{\"status\": 2},\"limit\":2,\"offset\":0}",
									"description": "We can query the criteria to search for, from the databse",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\":2,\"offset\":0}",
									"description": "We may need to query just to get a pagination, offset and limit are mandatory"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like a movie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{movies}}/like",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"path": [
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movie like count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{movies}}/like/count",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"path": [
								"like",
								"count"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"limit\":4,\"offset\":0,\"order\":{\"name\":\"DESC\"}}",
									"description": "We can order by any of the fields in the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\":4,\"offset\":0}",
									"description": "We may need to query just to get a pagination, offset and limit are mandatory",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlike movie by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{movies}}/like/3",
							"host": [
								"{{base-url}}{{movies}}"
							],
							"path": [
								"like",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Role",
			"item": [
				{
					"name": "Get all roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{role}}",
							"host": [
								"{{base-url}}{{role}}"
							],
							"query": [
								{
									"key": "filter",
									"value": "{\"limit\":4,\"offset\":0,\"order\":{\"name\":\"DESC\"}}",
									"description": "We can order by any of the fields in the database",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "{\"limit\":4,\"offset\":0}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ROLE_TEST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}{{role}}",
							"host": [
								"{{base-url}}{{role}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete role by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base-url}}{{role}}/3",
							"host": [
								"{{base-url}}{{role}}"
							],
							"path": [
								"3"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsImVtYWlsIjoiZXhhbXBsZUBleGFtcGxlLmNvbSIsInJvbGUiOjEsImlhdCI6MTY4ODQ2NDI3NywiZXhwIjoxNjg4NDY3ODc3fQ.L4M3TjQQlq1iE1t4-uq2uhRO8MOkqb37FspCi6WoNHQ",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// let token = pm.collectionVariables.get(\"token\");",
					"// console.log(token)",
					"",
					"// const getToken = (pmInstance) => {",
					"// \treturn new Promise((resolve, reject) => {",
					"//         let body = JSON.stringify({",
					"// \t\temail: \"example@example.com\",",
					"// \t\tpassword: \"secretpassword\",",
					"// \t});",
					"",
					"// \tlet options = {",
					"// \t\turl: \"http://localhost:3000/api/login\",",
					"// \t\tbody: {",
					"// \t\t\tmode: \"raw\",",
					"// \t\t\traw: body,",
					"// \t\t},",
					"// \t\tmethod: \"POST\",",
					"// \t\theader: {",
					"// \t\t\t\"Content-Type\": \"application/json\",",
					"// \t\t},",
					"// \t};",
					"",
					"// \t\tpm.sendRequest(options, (err, response) => {",
					"// \t\t\tif (err) {",
					"// \t\t\t\treject(err);",
					"// \t\t\t} ",
					"//             resolve([response.json().token, pmInstance])",
					"// \t\t});",
					"// \t});",
					"// };",
					"",
					"// if (!token) {",
					"// \tgetToken(pm)",
					"//         .then(tokenResponse => {",
					"//             tokenResponse[1].collectionVariables.set(\"token\", tokenResponse[0])",
					"//             console.log(tokenResponse)",
					"//         })",
					"//         .catch(error => console.log(error))",
					"// }"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base-url",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "users",
			"value": "/users",
			"type": "string"
		},
		{
			"key": "movies",
			"value": "/movies",
			"type": "string"
		},
		{
			"key": "login",
			"value": "/login",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsImVtYWlsIjoiZXhhbXBsZUBleGFtcGxlLmNvbSIsInJvbGUiOjEsImlhdCI6MTY4ODM0NDI3MiwiZXhwIjoxNjg4MzQ3ODcyfQ._dtakhrTtzpmFWbMmTg1pqWvf90j8ZgCJ3O3N0aqT3Y",
			"type": "string"
		},
		{
			"key": "role",
			"value": "/roles",
			"type": "string"
		}
	]
}